<Page
    x:Class="UwpReusables.TestBed.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"    
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:stValidation="using:UwpReusables.Controls.Standard.Validation"
    xmlns:prtValidation="using:UwpReusables.Controls.Portable.Validation"
    xmlns:formatting="using:UwpReusables.Controls.Standard.Formatting"
    xmlns:input="using:UwpReusables.Controls.Standard.Input"

    mc:Ignorable="d"
    d:DesignHeight="400"
    d:DesignWidth="600">

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0" Text="ValidatingTextBox" Style="{StaticResource SubheaderTextBlockStyle}" />
            <TextBlock Grid.Row="0" Grid.Column="1" Text="IsValid" Margin="2 0 0 0" />
            <TextBlock Grid.Row="0" Grid.Column="2" Text="IsDirty" Margin="2 0 0 0" />

            <stValidation:ValidatingTextBox x:Name="CodeBehindBox"
                                          Grid.Row="1"
                                          Grid.Column="0"                                             
                                          PlaceholderText="In code-behind: Must contain an @" />

            <stValidation:ValidatingTextBox x:Name="CustomGlyphBox"
                                          Grid.Row="2"
                                          Grid.Column="0"
                                          Margin="0 10 0 0"
                                          PlaceholderText="No dots, but with a new error hint"                                          
                                          ErrorHintGlyph="&#xE171;">
                <!--Segoe MDL2 big excalmation mark.-->
                <stValidation:ValidationPair ErrorMessage="No dots allowed, but now with a new glyph!"
                                           ValidationFunction="{x:Bind NoDotsFunction}" />
            </stValidation:ValidatingTextBox>

            <stValidation:ValidatingTextBox x:Name="CustomErrorHintColor"
                                          Margin="0 10 0 0"
                                          PlaceholderText="No dots, but now in orange"
                                          Grid.Row="3"
                                          Grid.Column="0"
                                          ErrorHintColor="DarkOrange">
                <stValidation:ValidationPair ErrorMessage="No dots allowed--now orange!"
                                           ValidationFunction="{x:Bind NoDotsFunction}" />
            </stValidation:ValidatingTextBox>

            <stValidation:ValidatingTextBox x:Name="ResetDirtyState"
                                          Margin="0 10 0 0"
                                          PlaceholderText="Must not be empty"
                                          Grid.Row="4"
                                          Grid.Column="0"
                                          IsDirty="{x:Bind IsResetDirtyStateBoxDirty, Mode=TwoWay}">
                <stValidation:ValidationPair ErrorMessage="This text box must not be empty."
                                           ValidationFunction="{x:Bind NotEmptyValidator}" />
            </stValidation:ValidatingTextBox>

            <prtValidation:ValidatingTextBoxPortable x:Name="TopBox"
                                                  Margin="0 10 0 0"
                                                  Grid.Row="6"
                                                  Grid.Column="0"
                                                  PlaceholderText="No dots or exclamations"
                                                  ValidationFunctions="{x:Bind TopBoxValidationFunctions}">
            </prtValidation:ValidatingTextBoxPortable>

            <Button x:Name="ResetDirtyButton"
                    Margin="0 10 0 0"
                    Grid.Row="5"
                    Grid.Column="0"
                    Content="Reset IsDirty for above TextBox"
                    Tapped="ResetDirtyButton_OnTapped" />

            <TextBlock Grid.Row="6" Grid.Column="1" 
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Margin="0 10 0 0"
                       Text="{x:Bind TopBox.IsValid, Converter={StaticResource BooleanToGlyphConverter}, Mode=OneWay}" 
                       Foreground="{x:Bind TopBox.IsValid, Converter={StaticResource BooleanToColorConverter}, Mode=OneWay}"/>
            <TextBlock Grid.Row="6" Grid.Column="2"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Margin="0 10 0 0"
                       Text="{x:Bind TopBox.IsDirty, Converter={StaticResource BooleanToGlyphConverter}, Mode=OneWay}" 
                       Foreground="{x:Bind TopBox.IsDirty, Converter={StaticResource BooleanToColorConverter}, Mode=OneWay}"/>

            <TextBlock Grid.Row="1" Grid.Column="1"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Margin="0 10 0 0"
                       Text="{x:Bind CodeBehindBox.IsValid, Converter={StaticResource BooleanToGlyphConverter}, Mode=OneWay}" 
                       Foreground="{x:Bind CodeBehindBox.IsValid, Converter={StaticResource BooleanToColorConverter}, Mode=OneWay}"/>
            <TextBlock Grid.Row="1" Grid.Column="2"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Margin="0 10 0 0"
                       Text="{x:Bind CodeBehindBox.IsDirty, Converter={StaticResource BooleanToGlyphConverter}, Mode=OneWay}"
                       Foreground="{x:Bind CodeBehindBox.IsDirty, Converter={StaticResource BooleanToColorConverter}, Mode=OneWay}"/>

            <TextBlock Grid.Row="2" Grid.Column="1"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Margin="0 10 0 0"
                       Text="{x:Bind CustomGlyphBox.IsValid, Converter={StaticResource BooleanToGlyphConverter}, Mode=OneWay}"
                       Foreground="{x:Bind CustomGlyphBox.IsValid, Converter={StaticResource BooleanToColorConverter}, Mode=OneWay}"/>
            <TextBlock Grid.Row="2" Grid.Column="2"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Margin="0 10 0 0"
                       Text="{x:Bind CustomGlyphBox.IsDirty, Converter={StaticResource BooleanToGlyphConverter}, Mode=OneWay}"
                       Foreground="{x:Bind CustomGlyphBox.IsDirty, Converter={StaticResource BooleanToColorConverter}, Mode=OneWay}"/>

            <TextBlock Grid.Row="3" Grid.Column="1"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Margin="0 10 0 0"
                       Text="{x:Bind CustomErrorHintColor.IsValid, Converter={StaticResource BooleanToGlyphConverter}, Mode=OneWay}"
                       Foreground="{x:Bind CustomErrorHintColor.IsValid, Converter={StaticResource BooleanToColorConverter}, Mode=OneWay}"/>
            <TextBlock Grid.Row="3" Grid.Column="2"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Margin="0 10 0 0"
                       Text="{x:Bind CustomErrorHintColor.IsDirty, Converter={StaticResource BooleanToGlyphConverter}, Mode=OneWay}"
                       Foreground="{x:Bind CustomErrorHintColor.IsDirty, Converter={StaticResource BooleanToColorConverter}, Mode=OneWay}"/>

            <TextBlock Grid.Row="4" Grid.Column="1"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Margin="0 10 0 0"
                       Text="{x:Bind ResetDirtyState.IsValid, Converter={StaticResource BooleanToGlyphConverter}, Mode=OneWay}"
                       Foreground="{x:Bind ResetDirtyState.IsValid, Converter={StaticResource BooleanToColorConverter}, Mode=OneWay}"/>
            <TextBlock Grid.Row="4" Grid.Column="2"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Margin="0 10 0 0"
                       Text="{x:Bind ResetDirtyState.IsDirty, Converter={StaticResource BooleanToGlyphConverter}, Mode=OneWay}"
                       Foreground="{x:Bind ResetDirtyState.IsDirty, Converter={StaticResource BooleanToColorConverter}, Mode=OneWay}"/>
            <!-- InlineTransformer examples -->
                <StackPanel Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="3" Margin="0 20 0 0">
                    <TextBlock Margin="0 10 0 10" 
                               Style="{StaticResource SubheaderTextBlockStyle}" 
                               Text="InlineTransformer TextBlocks"/>
                    <TextBlock Margin="0 10 0 10" 
                               formatting:InlineFormatter.Text="{x:Bind SimpleFormattingText}" />
                    <TextBlock Margin="0 10 0 10" 
                               formatting:InlineFormatter.Text="{x:Bind ColorFormattingText}"
                               formatting:InlineFormatter.Transformer="{x:Bind ColorTransformer}" />
                    <TextBlock Margin="0 10 0 10" 
                               formatting:InlineFormatter.Text="{x:Bind LinkFormattingText}" 
                               formatting:InlineFormatter.Transformer="{x:Bind LinkTransformer}" />
                    
                    <input:SearchableComboBox PlaceholderText="I'm a dropdown!" DropDownOpened="ComboBox_OnDropDownOpened" DropDownClosed="ComboBox_OnDropDownClosed">
                        <ComboBoxItem>Item 1</ComboBoxItem>
                        <ComboBoxItem>Item 2</ComboBoxItem>
                        <ComboBoxItem>Item 3</ComboBoxItem>
                    </input:SearchableComboBox>
                    <TextBlock x:Name="DropdownStatusBlock" Foreground="Red" Text="Dropdown Status: Closed"/>

                <ComboBox PlaceholderText="I'm a normal dropdown!">
                    <ComboBoxItem>Item 1</ComboBoxItem>
                    <ComboBoxItem>Item 2</ComboBoxItem>
                    <ComboBoxItem>Item 3</ComboBoxItem>
                </ComboBox>
                    
                </StackPanel>
        </Grid>
    </Grid>
</Page>